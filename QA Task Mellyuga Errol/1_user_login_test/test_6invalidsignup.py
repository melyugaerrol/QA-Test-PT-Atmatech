# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test6invalidsignup():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_6invalidsignup(self):
    # Test name: 6_invalid_sign_up
    # Step # | name | target | value
    # 1 | open | /login?redirect=%2F | 
    self.driver.get("https://brand.netray.id/login?redirect=%2F")
    # 2 | setWindowSize | 1050x708 | 
    self.driver.set_window_size(1050, 708)
    # 3 | click | id=signupButton | 
    self.driver.find_element(By.ID, "signupButton").click()
    # 4 | click | id=fullnameField | 
    self.driver.find_element(By.ID, "fullnameField").click()
    # 5 | type | id=fullnameField | testtest
    self.driver.find_element(By.ID, "fullnameField").send_keys("testtest")
    # 6 | click | id=usernameField | 
    self.driver.find_element(By.ID, "usernameField").click()
    # 7 | type | id=usernameField | test
    self.driver.find_element(By.ID, "usernameField").send_keys("test")
    # 8 | click | css=form | 
    self.driver.find_element(By.CSS_SELECTOR, "form").click()
    # 9 | click | id=emailField | 
    self.driver.find_element(By.ID, "emailField").click()
    # 10 | type | id=emailField | test
    self.driver.find_element(By.ID, "emailField").send_keys("test")
    # 11 | click | id=passwordField | 
    self.driver.find_element(By.ID, "passwordField").click()
    # 12 | type | id=passwordField | test
    self.driver.find_element(By.ID, "passwordField").send_keys("test")
    # 13 | click | id=confirmPasswordField | 
    self.driver.find_element(By.ID, "confirmPasswordField").click()
    # 14 | type | id=confirmPasswordField | test
    self.driver.find_element(By.ID, "confirmPasswordField").send_keys("test")
    # 15 | click | id=phoneField | 
    self.driver.find_element(By.ID, "phoneField").click()
    # 16 | type | id=phoneField | test
    self.driver.find_element(By.ID, "phoneField").send_keys("test")
    # 17 | click | css=.mb-3 > .custom-control-label | 
    self.driver.find_element(By.CSS_SELECTOR, ".mb-3 > .custom-control-label").click()
    # 18 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 19 | click | css=.recaptcha-checkbox-border | 
    self.driver.find_element(By.CSS_SELECTOR, ".recaptcha-checkbox-border").click()
    # 20 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 21 | selectFrame | index=2 | 
    self.driver.switch_to.frame(2)
    # 22 | click | css=tr:nth-child(1) > .rc-imageselect-tile:nth-child(2) .rc-image-tile-33 | 
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > .rc-imageselect-tile:nth-child(2) .rc-image-tile-33").click()
    # 23 | click | css=tr:nth-child(2) > .rc-imageselect-tile:nth-child(3) .rc-image-tile-33 | 
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > .rc-imageselect-tile:nth-child(3) .rc-image-tile-33").click()
    # 24 | click | css=tr:nth-child(3) > .rc-imageselect-tile:nth-child(2) .rc-image-tile-33 | 
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) > .rc-imageselect-tile:nth-child(2) .rc-image-tile-33").click()
    # 25 | click | id=recaptcha-verify-button | 
    self.driver.find_element(By.ID, "recaptcha-verify-button").click()
    # 26 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 27 | click | css=.card-body | 
    self.driver.find_element(By.CSS_SELECTOR, ".card-body").click()
    # 28 | close |  | 
    self.driver.close()
  
