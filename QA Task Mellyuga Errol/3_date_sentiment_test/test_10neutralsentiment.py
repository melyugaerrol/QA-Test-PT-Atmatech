# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test10neutralsentiment():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_10neutralsentiment(self):
    # Test name: 10_neutral_sentiment
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://brand.netray.id/")
    # 2 | setWindowSize | 1050x708 | 
    self.driver.set_window_size(1050, 708)
    # 3 | click | css=.topic-card-wrapper > .card-body | 
    self.driver.find_element(By.CSS_SELECTOR, ".topic-card-wrapper > .card-body").click()
    # 4 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 5 | click | id=__BVID__74 | 
    self.driver.find_element(By.ID, "__BVID__74").click()
    # 6 | select | id=__BVID__74 | label=Neutral
    dropdown = self.driver.find_element(By.ID, "__BVID__74")
    dropdown.find_element(By.XPATH, "//option[. = 'Neutral']").click()
    # 7 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 8 | runScript | window.scrollTo(0,1223) | 
    self.driver.execute_script("window.scrollTo(0,1223)")
    # 9 | runScript | window.scrollTo(0,1499) | 
    self.driver.execute_script("window.scrollTo(0,1499)")
    # 10 | close |  | 
    self.driver.close()
  
