# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test1spamtopwords():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_1spamtopwords(self):
    # Test name: 1_spam_top_words
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://brand.netray.id/")
    # 2 | setWindowSize | 1050x708 | 
    self.driver.set_window_size(1050, 708)
    # 3 | click | css=.list-inline | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-inline").click()
    # 4 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 5 | runScript | window.scrollTo(0,1233) | 
    self.driver.execute_script("window.scrollTo(0,1233)")
    # 6 | runScript | window.scrollTo(0,1600) | 
    self.driver.execute_script("window.scrollTo(0,1600)")
    # 7 | click | css=.cloud-item:nth-child(52) > span | 
    self.driver.find_element(By.CSS_SELECTOR, ".cloud-item:nth-child(52) > span").click()
    # 8 | click | xpath=(//li[@id='accordion']/div/div/header/div/button)[21] | 
    self.driver.find_element(By.XPATH, "(//li[@id=\'accordion\']/div/div/header/div/button)[21]").click()
    # 9 | mouseOver | xpath=(//li[@id='accordion']/div/div/header/div/button)[21] | 
    element = self.driver.find_element(By.XPATH, "(//li[@id=\'accordion\']/div/div/header/div/button)[21]")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 10 | mouseOut | xpath=(//li[@id='accordion']/div/div/header/div/button)[21] | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 11 | click | css=.spam-warning .btn-danger | 
    self.driver.find_element(By.CSS_SELECTOR, ".spam-warning .btn-danger").click()
    # 12 | runScript | window.scrollTo(0,1600) | 
    self.driver.execute_script("window.scrollTo(0,1600)")
    # 13 | click | css=div:nth-child(2) > div > .tweet-list > .list-button > .btn | 
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > div > .tweet-list > .list-button > .btn").click()
    # 14 | click | xpath=(//li[@id='accordion']/div/div/header/div/button)[21] | 
    self.driver.find_element(By.XPATH, "(//li[@id=\'accordion\']/div/div/header/div/button)[21]").click()
    # 15 | mouseOver | xpath=(//li[@id='accordion']/div/div/header/div/button)[21] | 
    element = self.driver.find_element(By.XPATH, "(//li[@id=\'accordion\']/div/div/header/div/button)[21]")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 16 | mouseOut | xpath=(//li[@id='accordion']/div/div/header/div/button)[21] | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 17 | click | css=.spam-warning .btn-danger | 
    self.driver.find_element(By.CSS_SELECTOR, ".spam-warning .btn-danger").click()
    # 18 | runScript | window.scrollTo(0,1872) | 
    self.driver.execute_script("window.scrollTo(0,1872)")
    # 19 | click | css=.p-2 | 
    self.driver.find_element(By.CSS_SELECTOR, ".p-2").click()
    # 20 | close |  | 
    self.driver.close()
  
